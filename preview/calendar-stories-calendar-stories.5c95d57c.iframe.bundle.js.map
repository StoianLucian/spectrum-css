{"version":3,"file":"calendar-stories-calendar-stories.5c95d57c.iframe.bundle.js","mappings":";;;AAgQA;AAKA;AACA;;AAEA;;AAEA;;;;;AAKA;;AAKA;AAcA;;;AAgBA;;;;AAIA;;AAEA;;;AAGA;;;AAKA;;AAEA;AACA;;;;;;AAOA;AAMA;;AAIA;AACA;AACA;AAGA;;AAIA;;;;AAOA;AAaA;AACA;;;;;;;;AAUA","sources":["webpack://@spectrum-css/preview/../components/calendar/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { repeat } from \"lit/directives/repeat.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport { action } from \"@storybook/addon-actions\";\nimport { useArgs, useGlobals } from \"@storybook/preview-api\";\n\nimport { Template as ActionButton } from \"@spectrum-css/actionbutton/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Calendar\",\n\tmonth,\n\tselectedDay,\n\tlastDay,\n\tyear,\n\tpadded,\n\tisDisabled = false,\n\tuseDOWAbbrev = false,\n\tbuttonSize = \"s\",\n\tcustomClasses = [],\n\tcustomStyles = {\n\t\t\"--mod-actionbutton-icon-size\": \"10px\",\n\t},\n\tonDateClick,\n\tpreviousHandler,\n\tnextHandler,\n\tid,\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\tconst [{ lang }] = useGlobals();\n\n\tconst DOW = [\n\t\t\"Sunday\",\n\t\t\"Monday\",\n\t\t\"Tuesday\",\n\t\t\"Wednesday\",\n\t\t\"Thursday\",\n\t\t\"Friday\",\n\t\t\"Saturday\",\n\t];\n\n\tconst printTitleFormat = {\n\t\tweekday: \"long\",\n\t\tmonth: \"long\",\n\t\tday: \"numeric\",\n\t\tyear: \"numeric\",\n\t};\n\n\tconst getMonthName = (dateOrIndex, format = \"long\") => {\n\t\tlet date;\n\t\tif (typeof dateOrIndex === \"number\") {\n\t\t\tdate = new Date().setMonth(dateOrIndex - 1);\n\t\t}\n\t\telse if (dateOrIndex instanceof Date) {\n\t\t\tdate = dateOrIndex;\n\t\t}\n\t\telse {\n\t\t\tconsole.warn(\n\t\t\t\t\"Calendar: getMonthName() requires a date object or a number.\"\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\treturn date.toLocaleString(lang ?? \"default\", { month: format });\n\t};\n\n\tlet today = new Date();\n\tif (window.isChromatic()) {\n\t\ttoday = new Date(`${month ?? \"January\"} 1, ${year ?? \"2021\"}`);\n\t}\n\n\tif (today) {\n\t\tmonth = month ?? getMonthName(today);\n\t\tyear = year ?? today.getFullYear();\n\t}\n\n\tconst displayedDate = new Date(`${month} 1, ${year}`);\n\tconst displayedMonth = displayedDate.getMonth();\n\tconst displayedYear = displayedDate.getFullYear();\n\n\t/**\n\t * @typedef {{ date: Date, dateClassList: import('lit').ClassInfo, isSelected: boolean, isToday: boolean, isOutsideMonth: boolean }} DateMetadata\n\t **/\n\n\t/**\n\t *\n\t * @param {object} config\n\t * @param {Date} config.selectedDate\n\t * @param {Date} config.lastSelectedDate\n\t * @returns {DateMetadata[]}\n\t */\n\tconst generateMonthArray = ({ selectedDate, lastSelectedDate }) => {\n\t\t/* Fetch a clean (time-free) version of today's date */\n\t\ttoday.setHours(0, 0, 0, 0);\n\t\tconst todayDatetime = today.getTime();\n\n\t\tlet selectedDatetime;\n\t\tlet lastSelectedDatetime;\n\n\t\tif (selectedDate && typeof selectedDate.setHours === \"function\") {\n\t\t\tselectedDate.setHours(0, 0, 0, 0);\n\t\t\tselectedDatetime = selectedDate ? selectedDate.getTime() : selectedDate;\n\t\t}\n\n\t\tif (lastSelectedDate && typeof lastSelectedDate.setHours === \"function\") {\n\t\t\tlastSelectedDate.setHours(0, 0, 0, 0);\n\t\t\tlastSelectedDatetime = lastSelectedDate\n\t\t\t\t? lastSelectedDate.getTime()\n\t\t\t\t: lastSelectedDate;\n\t\t}\n\n\t\tif (\n\t\t\tlastSelectedDatetime &&\n\t\t\tselectedDatetime &&\n\t\t\tlastSelectedDatetime < selectedDatetime\n\t\t) {\n\t\t\tlastSelectedDatetime = undefined;\n\t\t\tconsole.warn(\n\t\t\t\t\"Calendar: last selected date must occur after the selected date.\"\n\t\t\t);\n\t\t}\n\n\t\tconst lastDateInMonth = new Date(\n\t\t\tdisplayedYear,\n\t\t\tdisplayedMonth + 1,\n\t\t\t0\n\t\t).getDate();\n\n\t\tconst firstDOWInMonth = new Date(displayedYear, displayedMonth, 1).getDay(); // 0 = Sunday\n\n\t\tlet weeksInMonth = Math.ceil(lastDateInMonth / DOW.length);\n\t\tconst orphanedDays = lastDateInMonth % DOW.length;\n\n\t\tif (firstDOWInMonth > DOW.length - orphanedDays) {\n\t\t\tweeksInMonth++;\n\t\t}\n\t\tif (displayedMonth === 1 && firstDOWInMonth > 0) { // accounts for Feburary\n\t\t\tweeksInMonth++;\n\t\t}\n\n\t\t/* This is generating a nested array with the  */\n\t\treturn new Array(Math.ceil(weeksInMonth))\n\t\t\t.fill(0)\n\t\t\t.map((_val, idx) =>\n\t\t\t\tnew Array(DOW.length).fill(0).map((_v, i) => {\n\t\t\t\t\tconst thisDay = idx * DOW.length + i + 1 - firstDOWInMonth;\n\t\t\t\t\tconst isOutsideMonth =\n\t\t\t\t\t\tthisDay < 1 ||\n\t\t\t\t\t\tthisDay > lastDateInMonth;\n\t\t\t\t\t/* Determine if this entry exists within this month or the next or prev month */\n\t\t\t\t\tlet thisMonth = !isOutsideMonth\n\t\t\t\t\t\t? displayedMonth\n\t\t\t\t\t\t: displayedMonth + (thisDay < 1 ? -1 : 1);\n\t\t\t\t\t/* Determine if the displayed date is in this year or the previous one */\n\t\t\t\t\tlet thisYear = displayedYear;\n\n\t\t\t\t\tif (isOutsideMonth) {\n\t\t\t\t\t\tif (thisMonth < 0) {\n\t\t\t\t\t\t\tthisMonth = 11;\n\t\t\t\t\t\t\tthisYear -= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (thisMonth > 11) {\n\t\t\t\t\t\t\tthisMonth = 0;\n\t\t\t\t\t\t\tthisYear += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst thisDate = new Date(\n\t\t\t\t\t\tthisYear,\n\t\t\t\t\t\tdisplayedMonth,\n\t\t\t\t\t\tthisDay,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0\n\t\t\t\t\t);\n\t\t\t\t\tconst thisDatetime = thisDate.getTime();\n\n\t\t\t\t\t/* Compare the rendered date against the clean date stamp for today */\n\t\t\t\t\tconst isToday = !!(thisDatetime === todayDatetime);\n\t\t\t\t\tconst isInRange = !!(\n\t\t\t\t\t\tthisDatetime &&\n\t\t\t\t\t\tselectedDatetime &&\n\t\t\t\t\t\tlastSelectedDatetime &&\n\t\t\t\t\t\tthisDatetime >= selectedDatetime &&\n\t\t\t\t\t\tthisDatetime <= lastSelectedDatetime\n\t\t\t\t\t);\n\t\t\t\t\tconst isSelected = !!(\n\t\t\t\t\t\t(selectedDate && selectedDatetime === thisDatetime) ||\n\t\t\t\t\t\tisInRange\n\t\t\t\t\t);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdate: thisDate,\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tisToday,\n\t\t\t\t\t\tisOutsideMonth,\n\t\t\t\t\t\tisInRange,\n\t\t\t\t\t\tisRangeStart: !!(isInRange && thisDatetime === selectedDatetime),\n\t\t\t\t\t\tisRangeEnd: !!(isInRange && thisDatetime === lastSelectedDatetime),\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\t};\n\tif (!onDateClick || typeof onDateClick !== \"function\") {\n\t\t/**\n\t\t * @param {DateMetadata} thisDay\n\t\t * @param {Event} evt\n\t\t * @returns {void}\n\t\t */\n\t\tonDateClick = (thisDay, evt) => {\n\t\t\tif (!thisDay || thisDay.isDisabled || !thisDay.date) return;\n\n\t\t\tupdateArgs({ selectedDay: thisDay.date });\n\t\t\taction(`click .${rootClass}-date`)(evt);\n\t\t};\n\t}\n\n\tif (!previousHandler || typeof previousHandler !== \"function\") {\n\t\tpreviousHandler = ({ displayedMonth, displayedYear }) => {\n\t\t\tif (\n\t\t\t\ttypeof displayedMonth === \"undefined\" ||\n\t\t\t\ttypeof displayedYear === \"undefined\"\n\t\t\t) {\n\t\t\t\tconsole.warn(\"Calendar: No month or year could be determined.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn updateArgs({\n\t\t\t\tmonth: getMonthName(displayedMonth < 1 ? 12 : displayedMonth),\n\t\t\t\tyear: displayedMonth === 0 ? displayedYear - 1 : displayedYear,\n\t\t\t});\n\t\t};\n\t}\n\n\tif (!nextHandler || typeof nextHandler !== \"function\") {\n\t\tnextHandler = ({ displayedMonth, displayedYear }) => {\n\t\t\tif (\n\t\t\t\ttypeof displayedMonth === \"undefined\" ||\n\t\t\t\ttypeof displayedYear === \"undefined\"\n\t\t\t) {\n\t\t\t\tconsole.warn(\"Calendar: No month or year could be determined.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn updateArgs({\n\t\t\t\tmonth: getMonthName(displayedMonth > 10 ? 1 : displayedMonth + 2),\n\t\t\t\tyear: displayedMonth === 11 ? displayedYear + 1 : displayedYear,\n\t\t\t});\n\t\t};\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--padded`]: padded,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\tid=${ifDefined(id)}\n\t\t>\n\t\t\t<div class=\"${rootClass}-header\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"${rootClass}-title\"\n\t\t\t\t\trole=\"heading\"\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t>\n\t\t\t\t\t${displayedDate.toLocaleString(lang ?? \"default\", {\n\t\t\t\t\t\tmonth: \"long\",\n\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t${ActionButton({\n\t\t\t\t\t...globals,\n\t\t\t\t\tlabel: \"Previous\",\n\t\t\t\t\thideLabel: true,\n\t\t\t\t\tisQuiet: true,\n\t\t\t\t\tisDisabled,\n\t\t\t\t\tsize: buttonSize,\n\t\t\t\t\ticonName: \"ChevronLeft100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-prevMonth`],\n\t\t\t\t\tonclick: previousHandler.bind(null, {\n\t\t\t\t\t\tdisplayedMonth,\n\t\t\t\t\t\tdisplayedYear,\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\t${ActionButton({\n\t\t\t\t\t...globals,\n\t\t\t\t\tlabel: \"Next\",\n\t\t\t\t\thideLabel: true,\n\t\t\t\t\tisQuiet: true,\n\t\t\t\t\tisDisabled,\n\t\t\t\t\tsize: buttonSize,\n\t\t\t\t\ticonName: \"ChevronRight100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-nextMonth`],\n\t\t\t\t\tonclick: nextHandler.bind(null, {\n\t\t\t\t\t\tdisplayedMonth,\n\t\t\t\t\t\tdisplayedYear,\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass=\"${rootClass}-body\"\n\t\t\t\trole=\"grid\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\taria-readonly=\"true\"\n\t\t\t\taria-disabled=${isDisabled ? \"true\" : \"false\"}\n\t\t\t>\n\t\t\t\t<table role=\"presentation\" class=\"${rootClass}-table\">\n\t\t\t\t\t<thead role=\"presentation\">\n\t\t\t\t\t\t<tr role=\"row\">\n\t\t\t\t\t\t\t${repeat(\n\t\t\t\t\t\t\t\tDOW,\n\t\t\t\t\t\t\t\t(day) => html` <th\n\t\t\t\t\t\t\t\t\trole=\"columnheader\"\n\t\t\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\t\t\tclass=\"${rootClass}-tableCell\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<abbr class=\"${rootClass}-dayOfWeek\" title=${day}\n\t\t\t\t\t\t\t\t\t\t>${day.slice(0, useDOWAbbrev ? 3 : 1)}</abbr\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</th>`\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody role=\"presentation\">\n\t\t\t\t\t\t${repeat(\n\t\t\t\t\t\t\tgenerateMonthArray({\n\t\t\t\t\t\t\t\tselectedDate: selectedDay,\n\t\t\t\t\t\t\t\tlastSelectedDate: lastDay,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t(thisWeek) => html` <tr role=\"row\">\n\t\t\t\t\t\t\t\t${repeat(\n\t\t\t\t\t\t\t\t\tthisWeek,\n\t\t\t\t\t\t\t\t\t(thisDay) => html` <td\n\t\t\t\t\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t\t\t\t\t\tclass=\"${rootClass}-tableCell\"\n\t\t\t\t\t\t\t\t\t\ttabindex=${!thisDay.isOutsideMonth ? \"-1\" : \"\"}\n\t\t\t\t\t\t\t\t\t\taria-disabled=${thisDay.isDisabled\n\t\t\t\t\t\t\t\t\t\t\t? \"true\"\n\t\t\t\t\t\t\t\t\t\t\t: \"false\"}\n\t\t\t\t\t\t\t\t\t\taria-selected=${thisDay.isSelected === true\n\t\t\t\t\t\t\t\t\t\t\t? \"true\"\n\t\t\t\t\t\t\t\t\t\t\t: \"false\"}\n\t\t\t\t\t\t\t\t\t\taria-invalid=\"false\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"${thisDay.date.toLocaleDateString(\n\t\t\t\t\t\t\t\t\t\t\tlang,\n\t\t\t\t\t\t\t\t\t\t\tprintTitleFormat\n\t\t\t\t\t\t\t\t\t\t)}\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t\t\t\t\t\t\tclass=${classMap({\n\t\t\t\t\t\t\t\t\t\t\t\t[`${rootClass}-date`]: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-outsideMonth\": thisDay.isOutsideMonth,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-today\": thisDay.isToday,\n\t\t\t\t\t\t\t\t\t\t\t\t// \"is-focused\": thisDay.isSelected, @todo\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-range-selection\": thisDay.isInRange,\n\t\t\t\t\t\t\t\t\t\t\t\t// \"is-range-start\": thisDay.isRangeStart, @todo\n\t\t\t\t\t\t\t\t\t\t\t\t// \"is-range-end\": thisDay.isRangeEnd, @todo\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-selected\": thisDay.isSelected,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-selection-start\": thisDay.isRangeStart,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-selection-end\": thisDay.isRangeEnd,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t@click=${onDateClick.bind(null, thisDay)}\n\t\t\t\t\t\t\t\t\t\t\t>${thisDay.date.getDate()}</span\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</td>`\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</tr>`\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t`;\n};\n"],"names":[],"sourceRoot":""}