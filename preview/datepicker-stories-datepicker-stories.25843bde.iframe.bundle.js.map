{"version":3,"file":"datepicker-stories-datepicker-stories.25843bde.iframe.bundle.js","mappings":";;;AAsCA;AAWA;AACA;AACA;AACA;AACA;;;AAGA;AAgBA;AACA;AAeA;AAiBA;;AAkBA;;ACqIA;AAKA;AACA;;AAEA;;AAEA;;;;;AAKA;;AAKA;AAcA;;;AAgBA;;;;AAIA;;AAEA;;;AAGA;;;AAKA;;AAEA;AACA;;;;;;AAOA;AAMA;;AAIA;AACA;AACA;AAGA;;AAIA;;;;AAOA;AAaA;AACA;;;;;;;;AAUA;;AC/UA;AAQA;AACA;AACA;;AAEA;;AAOA;;AC/BA;AAeA;AACA;;AAEA;AACA;;AAMA;AACA;AAEA;AAEA;AACA;;;AASA;ACrCA;;;AAsGA;AASA;;AAEA;AACA;;AAEA;AACA;;AAMA;;AChIA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;AAgBA;;ACIA;AAgBA;AACA;AACA;AAMA;AAMA;;AAEA;AAKA;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMA;;AAMA","sources":["webpack://@spectrum-css/preview/../components/datepicker/stories/template.js","webpack://@spectrum-css/preview/../components/calendar/stories/template.js","webpack://@spectrum-css/preview/../components/fieldlabel/stories/template.js","webpack://@spectrum-css/preview/../components/pickerbutton/stories/template.js","webpack://@spectrum-css/preview/../components/popover/stories/template.js","webpack://@spectrum-css/preview/../components/progresscircle/stories/template.js","webpack://@spectrum-css/preview/../components/textfield/stories/template.js"],"sourcesContent":["import { html } from \"lit\";\nimport { when } from \"lit-html/directives/when.js\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport { Template as Calendar } from \"@spectrum-css/calendar/stories/template.js\";\nimport { Template as PickerButton } from \"@spectrum-css/pickerbutton/stories/template.js\";\nimport { Template as Popover } from \"@spectrum-css/popover/stories/template.js\";\nimport { Template as TextField } from \"@spectrum-css/textfield/stories/template.js\";\n\nimport { useArgs, useGlobals } from \"@storybook/preview-api\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-DatePicker\",\n\tid,\n\tcustomClasses = [],\n\tisOpen = true,\n\tisInvalid = false,\n\tisValid = false,\n\tisQuiet = false,\n\tisRange = false,\n\tisDateTimeRange = false,\n\tisDisabled = false,\n\tisRequired = false,\n\treadOnly = false,\n\tselectedDay,\n\tlastDay,\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\tconst [{ lang }] = useGlobals();\n\n\n\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t\"is-open\": !isDisabled && isOpen,\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}--range`]: isRange,\n\t\t\t\t[`${rootClass}--datetimeRange`]: isDateTimeRange,\n\t\t\t\t\"is-invalid\": !isDisabled && isInvalid,\n\t\t\t\t\"is-valid\": !isDisabled && isValid,\n\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\taria-disabled=${isDisabled ? \"true\" : \"false\"}\n\t\t\taria-invalid=${ifDefined(isInvalid && !isDisabled ? \"false\" : undefined)}\n\t\t\taria-readonly=${ifDefined(readOnly ? \"true\" : \"false\")}\n\t\t\taria-required=${ifDefined(isRequired ? \"true\" : \"false\")}\n\t\t\taria-haspopup=\"dialog\"\n\t\t>\n\t\t\t${TextField({\n\t\t\t\t...globals,\n\t\t\t\tsize: \"m\",\n\t\t\t\tisQuiet,\n\t\t\t\tisDisabled,\n\t\t\t\tisReadOnly: readOnly,\n\t\t\t\tisInvalid: !isRange ? isInvalid : undefined,\n\t\t\t\tcustomClasses: [`${rootClass}-textfield`],\n\t\t\t\tcustomInputClasses: isRange ? [`${rootClass}-input`, `${rootClass}-startField`] : [`${rootClass}-input`],\n\t\t\t\tplaceholder: \"Choose a date\",\n\t\t\t\tname: \"field\",\n\t\t\t\tvalue: selectedDay ? new Date(selectedDay).toLocaleDateString(lang) : undefined,\n\t\t\t\tonclick: function () {\n\t\t\t\t\tif (!isOpen) updateArgs({ isOpen: true });\n\t\t\t\t},\n\t\t\t})}\n\t\t\t${when(isRange, () => html`<div class=${rootClass}-rangeDash></div>`)}\n\t\t\t${when(isRange, () => TextField({\n\t\t\t\t...globals,\n\t\t\t\tsize: \"m\",\n\t\t\t\tisQuiet,\n\t\t\t\tisDisabled,\n\t\t\t\tisInvalid,\n\t\t\t\tisReadOnly: readOnly,\n\t\t\t\tcustomClasses: [`${rootClass}-textfield`],\n\t\t\t\tcustomInputClasses: [`${rootClass}-input`, `${rootClass}-endField`],\n\t\t\t\tplaceholder: \"Choose a date\",\n\t\t\t\tname: \"field\",\n\t\t\t\tvalue: lastDay\n\t\t\t\t\t? new Date(lastDay).toLocaleDateString(lang)\n\t\t\t\t\t: undefined,\n\t\t\t}))}\n\t\t\t${PickerButton({\n\t\t\t\t...globals,\n\t\t\t\tcustomClasses: [`${rootClass}-button`],\n\t\t\t\tsize: \"m\",\n\t\t\t\ticonType: \"workflow\",\n\t\t\t\ticonName: \"Calendar\",\n\t\t\t\tisQuiet,\n\t\t\t\tcustomStyles: readOnly ? { \"display\": \"none\" } : undefined,\n\t\t\t\t// @todo this is not added to the button on the website; need to make sure it's not a bug\n\t\t\t\t// isOpen,\n\t\t\t\tisInvalid,\n\t\t\t\tisDisabled,\n\t\t\t\tposition: \"right\",\n\t\t\t\tonclick: function () {\n\t\t\t\t\tupdateArgs({ isOpen: !isOpen });\n\t\t\t\t},\n\t\t\t})}\n\t\t\t${Popover({\n\t\t\t\t...globals,\n\t\t\t\tisOpen: isOpen && !isDisabled && !readOnly,\n\t\t\t\twithTip: false,\n\t\t\t\tposition: \"bottom\",\n\t\t\t\tisQuiet,\n\t\t\t\tcustomStyles: isOpen\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: \"100%\",\n\t\t\t\t\t\t\tleft: \"0\",\n\t\t\t\t\t\t\twidth: undefined,\n\t\t\t\t\t}\n\t\t\t\t\t: {},\n\t\t\t\tcontent: [Calendar(globals)],\n\t\t\t\t// @todo this implementation of calendar does not currently display range selections or selected date on first load\n\t\t\t})}\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { repeat } from \"lit/directives/repeat.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport { action } from \"@storybook/addon-actions\";\nimport { useArgs, useGlobals } from \"@storybook/preview-api\";\n\nimport { Template as ActionButton } from \"@spectrum-css/actionbutton/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Calendar\",\n\tmonth,\n\tselectedDay,\n\tlastDay,\n\tyear,\n\tpadded,\n\tisDisabled = false,\n\tuseDOWAbbrev = false,\n\tbuttonSize = \"s\",\n\tcustomClasses = [],\n\tcustomStyles = {\n\t\t\"--mod-actionbutton-icon-size\": \"10px\",\n\t},\n\tonDateClick,\n\tpreviousHandler,\n\tnextHandler,\n\tid,\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\tconst [{ lang }] = useGlobals();\n\n\tconst DOW = [\n\t\t\"Sunday\",\n\t\t\"Monday\",\n\t\t\"Tuesday\",\n\t\t\"Wednesday\",\n\t\t\"Thursday\",\n\t\t\"Friday\",\n\t\t\"Saturday\",\n\t];\n\n\tconst printTitleFormat = {\n\t\tweekday: \"long\",\n\t\tmonth: \"long\",\n\t\tday: \"numeric\",\n\t\tyear: \"numeric\",\n\t};\n\n\tconst getMonthName = (dateOrIndex, format = \"long\") => {\n\t\tlet date;\n\t\tif (typeof dateOrIndex === \"number\") {\n\t\t\tdate = new Date().setMonth(dateOrIndex - 1);\n\t\t}\n\t\telse if (dateOrIndex instanceof Date) {\n\t\t\tdate = dateOrIndex;\n\t\t}\n\t\telse {\n\t\t\tconsole.warn(\n\t\t\t\t\"Calendar: getMonthName() requires a date object or a number.\"\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\treturn date.toLocaleString(lang ?? \"default\", { month: format });\n\t};\n\n\tlet today = new Date();\n\tif (window.isChromatic()) {\n\t\ttoday = new Date(`${month ?? \"January\"} 1, ${year ?? \"2021\"}`);\n\t}\n\n\tif (today) {\n\t\tmonth = month ?? getMonthName(today);\n\t\tyear = year ?? today.getFullYear();\n\t}\n\n\tconst displayedDate = new Date(`${month} 1, ${year}`);\n\tconst displayedMonth = displayedDate.getMonth();\n\tconst displayedYear = displayedDate.getFullYear();\n\n\t/**\n\t * @typedef {{ date: Date, dateClassList: import('lit').ClassInfo, isSelected: boolean, isToday: boolean, isOutsideMonth: boolean }} DateMetadata\n\t **/\n\n\t/**\n\t *\n\t * @param {object} config\n\t * @param {Date} config.selectedDate\n\t * @param {Date} config.lastSelectedDate\n\t * @returns {DateMetadata[]}\n\t */\n\tconst generateMonthArray = ({ selectedDate, lastSelectedDate }) => {\n\t\t/* Fetch a clean (time-free) version of today's date */\n\t\ttoday.setHours(0, 0, 0, 0);\n\t\tconst todayDatetime = today.getTime();\n\n\t\tlet selectedDatetime;\n\t\tlet lastSelectedDatetime;\n\n\t\tif (selectedDate && typeof selectedDate.setHours === \"function\") {\n\t\t\tselectedDate.setHours(0, 0, 0, 0);\n\t\t\tselectedDatetime = selectedDate ? selectedDate.getTime() : selectedDate;\n\t\t}\n\n\t\tif (lastSelectedDate && typeof lastSelectedDate.setHours === \"function\") {\n\t\t\tlastSelectedDate.setHours(0, 0, 0, 0);\n\t\t\tlastSelectedDatetime = lastSelectedDate\n\t\t\t\t? lastSelectedDate.getTime()\n\t\t\t\t: lastSelectedDate;\n\t\t}\n\n\t\tif (\n\t\t\tlastSelectedDatetime &&\n\t\t\tselectedDatetime &&\n\t\t\tlastSelectedDatetime < selectedDatetime\n\t\t) {\n\t\t\tlastSelectedDatetime = undefined;\n\t\t\tconsole.warn(\n\t\t\t\t\"Calendar: last selected date must occur after the selected date.\"\n\t\t\t);\n\t\t}\n\n\t\tconst lastDateInMonth = new Date(\n\t\t\tdisplayedYear,\n\t\t\tdisplayedMonth + 1,\n\t\t\t0\n\t\t).getDate();\n\n\t\tconst firstDOWInMonth = new Date(displayedYear, displayedMonth, 1).getDay(); // 0 = Sunday\n\n\t\tlet weeksInMonth = Math.ceil(lastDateInMonth / DOW.length);\n\t\tconst orphanedDays = lastDateInMonth % DOW.length;\n\n\t\tif (firstDOWInMonth > DOW.length - orphanedDays) {\n\t\t\tweeksInMonth++;\n\t\t}\n\t\tif (displayedMonth === 1 && firstDOWInMonth > 0) { // accounts for Feburary\n\t\t\tweeksInMonth++;\n\t\t}\n\n\t\t/* This is generating a nested array with the  */\n\t\treturn new Array(Math.ceil(weeksInMonth))\n\t\t\t.fill(0)\n\t\t\t.map((_val, idx) =>\n\t\t\t\tnew Array(DOW.length).fill(0).map((_v, i) => {\n\t\t\t\t\tconst thisDay = idx * DOW.length + i + 1 - firstDOWInMonth;\n\t\t\t\t\tconst isOutsideMonth =\n\t\t\t\t\t\tthisDay < 1 ||\n\t\t\t\t\t\tthisDay > lastDateInMonth;\n\t\t\t\t\t/* Determine if this entry exists within this month or the next or prev month */\n\t\t\t\t\tlet thisMonth = !isOutsideMonth\n\t\t\t\t\t\t? displayedMonth\n\t\t\t\t\t\t: displayedMonth + (thisDay < 1 ? -1 : 1);\n\t\t\t\t\t/* Determine if the displayed date is in this year or the previous one */\n\t\t\t\t\tlet thisYear = displayedYear;\n\n\t\t\t\t\tif (isOutsideMonth) {\n\t\t\t\t\t\tif (thisMonth < 0) {\n\t\t\t\t\t\t\tthisMonth = 11;\n\t\t\t\t\t\t\tthisYear -= 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (thisMonth > 11) {\n\t\t\t\t\t\t\tthisMonth = 0;\n\t\t\t\t\t\t\tthisYear += 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst thisDate = new Date(\n\t\t\t\t\t\tthisYear,\n\t\t\t\t\t\tdisplayedMonth,\n\t\t\t\t\t\tthisDay,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t0\n\t\t\t\t\t);\n\t\t\t\t\tconst thisDatetime = thisDate.getTime();\n\n\t\t\t\t\t/* Compare the rendered date against the clean date stamp for today */\n\t\t\t\t\tconst isToday = !!(thisDatetime === todayDatetime);\n\t\t\t\t\tconst isInRange = !!(\n\t\t\t\t\t\tthisDatetime &&\n\t\t\t\t\t\tselectedDatetime &&\n\t\t\t\t\t\tlastSelectedDatetime &&\n\t\t\t\t\t\tthisDatetime >= selectedDatetime &&\n\t\t\t\t\t\tthisDatetime <= lastSelectedDatetime\n\t\t\t\t\t);\n\t\t\t\t\tconst isSelected = !!(\n\t\t\t\t\t\t(selectedDate && selectedDatetime === thisDatetime) ||\n\t\t\t\t\t\tisInRange\n\t\t\t\t\t);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdate: thisDate,\n\t\t\t\t\t\tisSelected,\n\t\t\t\t\t\tisToday,\n\t\t\t\t\t\tisOutsideMonth,\n\t\t\t\t\t\tisInRange,\n\t\t\t\t\t\tisRangeStart: !!(isInRange && thisDatetime === selectedDatetime),\n\t\t\t\t\t\tisRangeEnd: !!(isInRange && thisDatetime === lastSelectedDatetime),\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t);\n\t};\n\tif (!onDateClick || typeof onDateClick !== \"function\") {\n\t\t/**\n\t\t * @param {DateMetadata} thisDay\n\t\t * @param {Event} evt\n\t\t * @returns {void}\n\t\t */\n\t\tonDateClick = (thisDay, evt) => {\n\t\t\tif (!thisDay || thisDay.isDisabled || !thisDay.date) return;\n\n\t\t\tupdateArgs({ selectedDay: thisDay.date });\n\t\t\taction(`click .${rootClass}-date`)(evt);\n\t\t};\n\t}\n\n\tif (!previousHandler || typeof previousHandler !== \"function\") {\n\t\tpreviousHandler = ({ displayedMonth, displayedYear }) => {\n\t\t\tif (\n\t\t\t\ttypeof displayedMonth === \"undefined\" ||\n\t\t\t\ttypeof displayedYear === \"undefined\"\n\t\t\t) {\n\t\t\t\tconsole.warn(\"Calendar: No month or year could be determined.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn updateArgs({\n\t\t\t\tmonth: getMonthName(displayedMonth < 1 ? 12 : displayedMonth),\n\t\t\t\tyear: displayedMonth === 0 ? displayedYear - 1 : displayedYear,\n\t\t\t});\n\t\t};\n\t}\n\n\tif (!nextHandler || typeof nextHandler !== \"function\") {\n\t\tnextHandler = ({ displayedMonth, displayedYear }) => {\n\t\t\tif (\n\t\t\t\ttypeof displayedMonth === \"undefined\" ||\n\t\t\t\ttypeof displayedYear === \"undefined\"\n\t\t\t) {\n\t\t\t\tconsole.warn(\"Calendar: No month or year could be determined.\");\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn updateArgs({\n\t\t\t\tmonth: getMonthName(displayedMonth > 10 ? 1 : displayedMonth + 2),\n\t\t\t\tyear: displayedMonth === 11 ? displayedYear + 1 : displayedYear,\n\t\t\t});\n\t\t};\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--padded`]: padded,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\tid=${ifDefined(id)}\n\t\t>\n\t\t\t<div class=\"${rootClass}-header\">\n\t\t\t\t<div\n\t\t\t\t\tclass=\"${rootClass}-title\"\n\t\t\t\t\trole=\"heading\"\n\t\t\t\t\taria-live=\"assertive\"\n\t\t\t\t\taria-atomic=\"true\"\n\t\t\t\t>\n\t\t\t\t\t${displayedDate.toLocaleString(lang ?? \"default\", {\n\t\t\t\t\t\tmonth: \"long\",\n\t\t\t\t\t\tyear: \"numeric\",\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t\t${ActionButton({\n\t\t\t\t\t...globals,\n\t\t\t\t\tlabel: \"Previous\",\n\t\t\t\t\thideLabel: true,\n\t\t\t\t\tisQuiet: true,\n\t\t\t\t\tisDisabled,\n\t\t\t\t\tsize: buttonSize,\n\t\t\t\t\ticonName: \"ChevronLeft100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-prevMonth`],\n\t\t\t\t\tonclick: previousHandler.bind(null, {\n\t\t\t\t\t\tdisplayedMonth,\n\t\t\t\t\t\tdisplayedYear,\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t\t${ActionButton({\n\t\t\t\t\t...globals,\n\t\t\t\t\tlabel: \"Next\",\n\t\t\t\t\thideLabel: true,\n\t\t\t\t\tisQuiet: true,\n\t\t\t\t\tisDisabled,\n\t\t\t\t\tsize: buttonSize,\n\t\t\t\t\ticonName: \"ChevronRight100\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-nextMonth`],\n\t\t\t\t\tonclick: nextHandler.bind(null, {\n\t\t\t\t\t\tdisplayedMonth,\n\t\t\t\t\t\tdisplayedYear,\n\t\t\t\t\t}),\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclass=\"${rootClass}-body\"\n\t\t\t\trole=\"grid\"\n\t\t\t\ttabindex=\"0\"\n\t\t\t\taria-readonly=\"true\"\n\t\t\t\taria-disabled=${isDisabled ? \"true\" : \"false\"}\n\t\t\t>\n\t\t\t\t<table role=\"presentation\" class=\"${rootClass}-table\">\n\t\t\t\t\t<thead role=\"presentation\">\n\t\t\t\t\t\t<tr role=\"row\">\n\t\t\t\t\t\t\t${repeat(\n\t\t\t\t\t\t\t\tDOW,\n\t\t\t\t\t\t\t\t(day) => html` <th\n\t\t\t\t\t\t\t\t\trole=\"columnheader\"\n\t\t\t\t\t\t\t\t\tscope=\"col\"\n\t\t\t\t\t\t\t\t\tclass=\"${rootClass}-tableCell\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<abbr class=\"${rootClass}-dayOfWeek\" title=${day}\n\t\t\t\t\t\t\t\t\t\t>${day.slice(0, useDOWAbbrev ? 3 : 1)}</abbr\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</th>`\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody role=\"presentation\">\n\t\t\t\t\t\t${repeat(\n\t\t\t\t\t\t\tgenerateMonthArray({\n\t\t\t\t\t\t\t\tselectedDate: selectedDay,\n\t\t\t\t\t\t\t\tlastSelectedDate: lastDay,\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t(thisWeek) => html` <tr role=\"row\">\n\t\t\t\t\t\t\t\t${repeat(\n\t\t\t\t\t\t\t\t\tthisWeek,\n\t\t\t\t\t\t\t\t\t(thisDay) => html` <td\n\t\t\t\t\t\t\t\t\t\trole=\"gridcell\"\n\t\t\t\t\t\t\t\t\t\tclass=\"${rootClass}-tableCell\"\n\t\t\t\t\t\t\t\t\t\ttabindex=${!thisDay.isOutsideMonth ? \"-1\" : \"\"}\n\t\t\t\t\t\t\t\t\t\taria-disabled=${thisDay.isDisabled\n\t\t\t\t\t\t\t\t\t\t\t? \"true\"\n\t\t\t\t\t\t\t\t\t\t\t: \"false\"}\n\t\t\t\t\t\t\t\t\t\taria-selected=${thisDay.isSelected === true\n\t\t\t\t\t\t\t\t\t\t\t? \"true\"\n\t\t\t\t\t\t\t\t\t\t\t: \"false\"}\n\t\t\t\t\t\t\t\t\t\taria-invalid=\"false\"\n\t\t\t\t\t\t\t\t\t\ttitle=\"${thisDay.date.toLocaleDateString(\n\t\t\t\t\t\t\t\t\t\t\tlang,\n\t\t\t\t\t\t\t\t\t\t\tprintTitleFormat\n\t\t\t\t\t\t\t\t\t\t)}\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\t\trole=\"presentation\"\n\t\t\t\t\t\t\t\t\t\t\tclass=${classMap({\n\t\t\t\t\t\t\t\t\t\t\t\t[`${rootClass}-date`]: true,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-outsideMonth\": thisDay.isOutsideMonth,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-today\": thisDay.isToday,\n\t\t\t\t\t\t\t\t\t\t\t\t// \"is-focused\": thisDay.isSelected, @todo\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-range-selection\": thisDay.isInRange,\n\t\t\t\t\t\t\t\t\t\t\t\t// \"is-range-start\": thisDay.isRangeStart, @todo\n\t\t\t\t\t\t\t\t\t\t\t\t// \"is-range-end\": thisDay.isRangeEnd, @todo\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-selected\": thisDay.isSelected,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-selection-start\": thisDay.isRangeStart,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-selection-end\": thisDay.isRangeEnd,\n\t\t\t\t\t\t\t\t\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t@click=${onDateClick.bind(null, thisDay)}\n\t\t\t\t\t\t\t\t\t\t\t>${thisDay.date.getDate()}</span\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t</td>`\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</tr>`\n\t\t\t\t\t\t)}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-FieldLabel\",\n\tcustomClasses = [],\n\tsize = \"m\",\n\tlabel,\n\tid,\n\tforInput,\n\talignment,\n\tisDisabled,\n\tisRequired,\n\tcustomStyles = {},\n\t...globals\n}) => {\n\tif (!label) {\n\t\tconsole.warn(\"FieldLabel: please provide a label for the field label.\");\n\t\treturn html``;\n\t}\n\n\tlet iconName = \"Asterisk100\";\n\tswitch (size) {\n\t\tcase \"s\":\n\t\t\ticonName = \"Asterisk100\";\n\t\t\tbreak;\n\t\tcase \"l\":\n\t\t\ticonName = \"Asterisk200\";\n\t\t\tbreak;\n\t\tcase \"xl\":\n\t\t\ticonName = \"Asterisk300\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\ticonName = \"Asterisk100\";\n\t}\n\n\treturn html`\n\t\t<label\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--${alignment}`]: typeof alignment !== \"undefined\",\n\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${styleMap(customStyles)}\n\t\t\tid=${ifDefined(id)}\n\t\t\tfor=${ifDefined(forInput)}\n\t\t>\n\t\t\t${label}${when(isRequired, () => Icon({\n\t\t\t\t...globals,\n\t\t\t\tsize,\n\t\t\t\ticonName,\n\t\t\t\tcustomClasses: [`${rootClass}-UIIcon`, `${rootClass}-requiredIcon`],\n\t\t\t}))}\n\t\t</label>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport { useArgs } from \"@storybook/preview-api\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\tid,\n\trootClass = \"spectrum-PickerButton\",\n\tsize = \"m\",\n\tlabel,\n\tposition,\n\ticonType = \"ui\",\n\ticonName = \"ChevronDown\",\n\tisDisabled = false,\n\tisFocused = false,\n\tisOpen = false,\n\tisQuiet = false,\n\tcustomClasses = [],\n\tisRounded = false,\n\tcustomStyles = {},\n\tonclick,\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\n\treturn html`\n\t\t<button\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--textuiicon`]: label && iconType === \"ui\",\n\t\t\t\t[`${rootClass}--uiicononly`]: !label && iconType === \"ui\",\n\t\t\t\t[`${rootClass}--icononly`]: !label && iconType !== \"ui\",\n\t\t\t\t[`${rootClass}--${position}`]: typeof position !== \"undefined\",\n\t\t\t\t[`${rootClass}--rounded`]: isRounded,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t\"is-focused\": isFocused,\n\t\t\t\t\"is-open\": isOpen && !isDisabled,\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\tid=${ifDefined(id)}\n\t\t\taria-haspopup=\"listbox\"\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick ??\n\t\t\tfunction () {\n\t\t\t\tif (isDisabled) return;\n\t\t\t\tupdateArgs({ isOpen: !isOpen });\n\t\t\t}}\n\t\t>\n\t\t\t<div class=\"${rootClass}-fill\">\n\t\t\t\t${label\n\t\t\t\t\t? html`<span class=\"${rootClass}-label is-placeholder\"\n\t\t\t\t\t\t\t>${label}</span\n\t\t\t\t\t  >`\n\t\t\t\t\t: \"\"}\n\t\t\t\t${Icon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsetName: iconType,\n\t\t\t\t\ticonName: iconName ?? \"ChevronDown\",\n\t\t\t\t\tsize,\n\t\t\t\t\tcustomClasses: [`${rootClass}-icon`],\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</button>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { useArgs } from \"@storybook/preview-api\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Popover\",\n\tsize = \"m\",\n\tisOpen = false,\n\twithTip = false,\n\tposition = \"top\",\n\tcustomClasses = [],\n\tid = \"popover-1\",\n\ttestId,\n\ttriggerId = \"trigger\",\n\tcustomStyles = {},\n\ttrigger,\n\tcontent = [],\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\n\tif (content.length === 0) {\n\t\tconsole.warn(\"Popover: No content provided.\");\n\t\treturn html``;\n\t}\n\n\n\tconst nestedPopover = id === \"popover-nested\" || id === \"popover-nested-2\";\n\n\treturn html`\n\t\t${when(typeof trigger === \"function\", () => trigger({\n\t\t\t...globals,\n\t\t\tisSelected: isOpen,\n\t\t\tisOpen: nestedPopover ?? true,\n\t\t\tonclick: () => {\n\t\t\t\t// Nested popover is static and open, so we don't need transforms for it\n\t\t\t\t!nestedPopover &&\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// No trigger? Nothing to do.\n\t\t\t\t\tif (!trigger || !position) return [];\n\n\t\t\t\t\t// Get trigger element and popover\n\t\t\t\t\tconst element = document.querySelector(`#${triggerId}`);\n\n\t\t\t\t\tif (!element) return [];\n\t\t\t\t\tconst rect = element.getBoundingClientRect();\n\t\t\t\t\tconst popover = document.querySelector(`#${id}`);\n\t\t\t\t\tif (!popover) return [];\n\n\t\t\t\t\tconst transforms = [];\n\t\t\t\t\tconst additionalStyles = {};\n\t\t\t\t\tconst triggerXCenter = (rect.left + rect.right) / 2;\n\t\t\t\t\tconst triggerYCenter = (rect.top + rect.bottom) / 2;\n\t\t\t\t\tconst popWidth = popover.offsetWidth ?? 0;\n\t\t\t\t\tconst popHeight = popover.offsetHeight ?? 0;\n\t\t\t\t\tconst textDir = getComputedStyle(document.querySelector(\"html\")).direction;\n\t\t\t\t\tlet x, y;\n\t\t\t\t\tlet xOffset = \"+ 0px\";\n\t\t\t\t\tlet yOffset = \"+ 0px\";\n\t\t\t\t\tif (position.includes(\"top\") || position.includes(\"bottom\") && !(position.includes(\"-top\") || position.includes(\"-bottom\"))) {\n\t\t\t\t\t\tx = triggerXCenter - (popWidth > 0 ? popWidth / 2 : popWidth);\n\t\t\t\t\t}\n\t\t\t\t\tif (position.includes(\"left\") || position.includes(\"right\")) {\n\t\t\t\t\t\ty = triggerYCenter - (popHeight > 0 ? popHeight / 2 : popHeight);\n\t\t\t\t\t}\n\t\t\t\t\tif (position.includes(\"top\") && !position.includes(\"-top\")) {\n\t\t\t\t\t\ty = rect.top - popHeight;\n\t\t\t\t\t\tyOffset = withTip\n\t\t\t\t\t\t\t? \"- (var(--spectrum-popover-pointer-height) + var(--spectrum-popover-animation-distance) - 1px)\"\n\t\t\t\t\t\t\t: \"- var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t}\n else if (position.includes(\"bottom\") && !position.includes(\"-bottom\")) {\n\t\t\t\t\t\ty = rect.bottom;\n\t\t\t\t\t\tyOffset = \"+ (var(--spectrum-popover-animation-distance))\";\n\t\t\t\t\t}\n else if (position.includes(\"left\")) {\n\t\t\t\t\t\tif (textDir == \"rtl\") {\n\t\t\t\t\t\t\tx = rect.right;\n\t\t\t\t\t\t\txOffset = withTip ? \"+ 0px\" : \"+ var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t}\n else {\n\t\t\t\t\t\t\tx = rect.left - popWidth;\n\t\t\t\t\t\t\txOffset = withTip\n\t\t\t\t\t\t\t\t? \"- ((var(--spectrum-popover-pointer-width) / 2) + var(--spectrum-popover-animation-distance) - 2px)\"\n\t\t\t\t\t\t\t\t: \"- var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n else if (position.includes(\"right\")) {\n\t\t\t\t\t\tif (textDir == \"rtl\") {\n\t\t\t\t\t\t\tx = rect.left - popWidth;\n\t\t\t\t\t\t\txOffset = withTip\n\t\t\t\t\t\t\t\t? \"- ((var(--spectrum-popover-pointer-width) / 2) + var(--spectrum-popover-animation-distance) - 2px)\"\n\t\t\t\t\t\t\t\t: \"- var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t}\n else {\n\t\t\t\t\t\t\tx = rect.right;\n\t\t\t\t\t\t\txOffset = withTip ? \"+ 0px\" : \"+ var(--spectrum-popover-animation-distance)\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (x) transforms.push(`translateX(calc(var(--flow-direction) * calc(${parseInt(x, 10)}px ${xOffset})))`);\n\t\t\t\t\tif (y) transforms.push(`translateY(calc(${y}px ${yOffset}))`);\n\n\t\t\t\t\t// Add start and end styles\n\t\t\t\t\tif (position === \"top-start\" || position === \"bottom-start\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-inline-start\"] = \"calc(\" + (popWidth / 2) + \"px - var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t}\n else if (position === \"top-end\" || position === \"bottom-end\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-inline-start\"] = \"calc(-1 *\" + (popWidth / 2) + \"px + var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t}\n else if (position === \"left-top\" || position === \"right-top\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-block-start\"] = \"calc(\" + (popHeight / 2) + \"px - var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t}\n else if (position === \"left-bottom\" || position === \"right-bottom\") {\n\t\t\t\t\t\tadditionalStyles[\"inset-block-start\"] = \"calc(-1 *\" + (popHeight / 2) + \"px + var(--spectrum-popover-pointer-edge-offset))\";\n\t\t\t\t\t}\n\n\t\t\t\t\tupdateArgs({\n\t\t\t\t\t\tisOpen: !isOpen,\n\t\t\t\t\t\tcustomStyles: {\n\t\t\t\t\t\t\t\"inset-inline-start\": \"0px\",\n\t\t\t\t\t\t\t\"inset-block-start\": \"0px\",\n\t\t\t\t\t\t\t...customStyles,\n\t\t\t\t\t\t\ttransform: transforms.join(\" \"),\n\t\t\t\t\t\t\t...additionalStyles,\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, 100);\n\t\t\t\t}\n\t\t}))}\n\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--withTip`]: withTip,\n\t\t\t\t[`${rootClass}--${position}`]: typeof position !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\trole=\"presentation\"\n\t\t\tid=${ifDefined(id)}\n\t\t\tdata-testid=${ifDefined(testId)}\n\t\t>\n\t\t\t${content.map((c) => (typeof c === \"function\" ? c({}) : c))}\n\t\t\t${withTip\n\t\t\t\t? position && [\"top\", \"bottom\"].some((e) => position.startsWith(e))\n\t\t\t\t\t? html`<svg class=\"${rootClass}-tip\" viewBox=\"0 -0.5 16 9\" width=\"10\"><path class=\"${rootClass}-tip-triangle\" d=\"M-1,-1 8,8 17,-1\"></svg>`\n\t\t\t\t\t: html`<svg class=\"${rootClass}-tip\" viewBox=\"0 -0.5 9 16\" width=\"10\"><path class=\"${rootClass}-tip-triangle\" d=\"M-1,-1 8,8 -1,17\"></svg>`\n\t\t\t\t: \"\"}\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\tid,\n\tcustomStyles = {},\n\ttestId,\n\trootClass = \"spectrum-ProgressCircle\",\n\tcustomClasses = [],\n\tsize = \"m\",\n\tstaticColor,\n\tisIndeterminate = false,\n}) => {\n\tlet sizeClassName = \"medium\";\n\tswitch (size) {\n\t\tcase \"s\":\n\t\t\tsizeClassName = \"small\";\n\t\t\tbreak;\n\t\tcase \"l\":\n\t\t\tsizeClassName = \"large\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tsizeClassName = \"medium\";\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--${sizeClassName}`]: typeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--indeterminate`]: isIndeterminate,\n\t\t\t\t[`${rootClass}--staticWhite`]: staticColor === \"white\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\tdata-testid=${ifDefined(testId)}\n\t\t>\n\t\t\t<div class=\"spectrum-ProgressCircle-track\"></div>\n\t\t\t<div class=\"spectrum-ProgressCircle-fills\">\n\t\t\t\t<div class=\"spectrum-ProgressCircle-fillMask1\">\n\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fillSubMask1\">\n\t\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fill\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"spectrum-ProgressCircle-fillMask2\">\n\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fillSubMask2\">\n\t\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fill\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`;\n};\n","import { useArgs } from \"@storybook/preview-api\";\nimport { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { Template as FieldLabel } from \"@spectrum-css/fieldlabel/stories/template.js\";\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\nimport { Template as ProgressCircle } from \"@spectrum-css/progresscircle/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Textfield\",\n\tsize = \"m\",\n\tcustomClasses = [],\n\tcustomInputClasses = [],\n\tcustomIconClasses = [],\n\tcustomProgressCircleClasses = [],\n\tisInvalid = false,\n\tisValid = false,\n\tmultiline = false,\n\tgrows = false,\n\tisQuiet = false,\n\tisFocused = false,\n\tisDisabled = false,\n\tisRequired = false,\n\tisReadOnly = false,\n\tisKeyboardFocused = false,\n\tisLoading = false,\n\tdisplayLabel = false,\n\tlabelPosition = \"top\",\n\tlabelText,\n\ticonName,\n\ticonSet,\n\tpattern,\n\tplaceholder,\n\tname,\n\tid,\n\tvalue,\n\ttype = \"text\",\n\tautocomplete = true,\n\tonclick,\n\tcustomStyles = {},\n\t...globals\n}) => {\n\tconst [, updateArgs] = useArgs();\n\n\tif (isInvalid) {\n\t\ticonName = \"Alert\";\n\t\ticonSet = \"workflow\";\n\t}\n\telse if (isValid) {\n\t\ticonName = \"Checkmark\";\n\t\ticonSet = \"ui\";\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--multiline`]: multiline,\n\t\t\t\t[`${rootClass}--grows`]: grows,\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}--sideLabel`]: labelPosition === \"side\",\n\t\t\t\t\"is-invalid\": isInvalid,\n\t\t\t\t\"is-valid\": isValid,\n\t\t\t\t\"is-focused\": isFocused,\n\t\t\t\t\"is-keyboardFocused\": isKeyboardFocused,\n\t\t\t\t\"is-disabled\": isDisabled,\n\t\t\t\t\"is-readOnly\": isReadOnly,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\t@click=${onclick}\n\t\t\t@focusin=${(e) => {\n\t\t\t\tconst focusClass = e.target?.classList?.contains(\"focus-ring\")\n\t\t\t\t\t? { isKeyboardFocused: true }\n\t\t\t\t\t: { isFocused: true };\n\t\t\t\tupdateArgs(focusClass);\n\t\t\t}}\n\t\t\t@focusout=${(e) => {\n\t\t\t\tconst focusClass = e.target?.classList?.contains(\"focus-ring\")\n\t\t\t\t\t? { isKeyboardFocused: false }\n\t\t\t\t\t: { isFocused: false };\n\t\t\t\tupdateArgs(focusClass);\n\t\t\t}}\n\t\t\tid=${ifDefined(id)}\n\t\t>\n\t\t${when(displayLabel, () => FieldLabel({\n\t\t\t...globals,\n\t\t\tsize,\n\t\t\tlabel: labelText,\n\t\t}))}\n\t\t${when(iconName, () => Icon({\n\t\t\t...globals,\n\t\t\tsize,\n\t\t\ticonName,\n\t\t\tsetName: iconSet,\n\t\t\tcustomClasses: [\n\t\t\t\tisInvalid || isValid\n\t\t\t\t\t? `${rootClass}-validationIcon`\n\t\t\t\t\t: `${rootClass}-icon`,\n\t\t\t\t...customIconClasses,\n\t\t\t],\n\t\t}))}\n\t\t${when(multiline,\n\t\t\t() => html`<textarea\n\t\t\t\tplaceholder=${ifDefined(placeholder)}\n\t\t\t\tname=${ifDefined(name)}\n\t\t\t\tid=${ifDefined(id ? `${id}-input` : undefined)}\n\t\t\t\t.value=${ifDefined(value)}\n\t\t\t\tautocomplete=${autocomplete ? undefined : \"off\"}\n\t\t\t\t?required=${isRequired}\n\t\t\t\t?disabled=${isDisabled}\n\t\t\t\t?readonly=${ifDefined(isReadOnly)}\n\t\t\t\tpattern=${ifDefined(pattern)}\n\t\t\t\tclass=${classMap({\n\t\t\t\t\t[`${rootClass}-input`]: true,\n\t\t\t\t\t...customInputClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t\t})}\n\t\t\t/>`,\n\t\t\t() => html`<input\n\t\t\t\ttype=${ifDefined(type)}\n\t\t\t\tplaceholder=${ifDefined(placeholder)}\n\t\t\t\tname=${ifDefined(name)}\n\t\t\t\tid=${ifDefined(id ? `${id}-input` : undefined)}\n\t\t\t\t.value=${ifDefined(value)}\n\t\t\t\tautocomplete=${autocomplete ? undefined : \"off\"}\n\t\t\t\t?required=${isRequired}\n\t\t\t\t?disabled=${isDisabled}\n\t\t\t\t?readonly=${ifDefined(isReadOnly)}\n\t\t\t\tpattern=${ifDefined(pattern)}\n\t\t\t\tclass=${classMap({\n\t\t\t\t\t[`${rootClass}-input`]: true,\n\t\t\t\t\t...customInputClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t\t})}\n\t\t\t/>`\n\t\t)}\n\t\t${when(isLoading, () => ProgressCircle({\n\t\t\tisIndeterminate: true,\n\t\t\tsize: \"s\",\n\t\t\tcustomClasses: customProgressCircleClasses,\n\t\t}))}\n\t</div>\n\t`;\n};\n"],"names":[],"sourceRoot":""}