{"version":3,"file":"quickaction-quickaction-stories.1d56c4bc.iframe.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4IA;AAWA;;AAEA;;AAhDA;;AC9DA;AACA;AACA;AACA;AAeA;AACA;AACA;AACA;AACA;AACA;;AAEA;AASA;AASA","sources":["webpack://@spectrum-css/preview/","webpack://@spectrum-css/preview/../components/actionbutton/stories/template.js"],"sourcesContent":[null,"import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { capitalize, lowerCase } from \"lodash-es\";\n\nimport \"@spectrum-css/actionbutton/index.css\";\n\n/**\n * @todo load order should not influence the icon size but it is; fix this\n*/\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nexport const Template = ({\n\trootClass = \"spectrum-ActionButton\",\n\tsize = \"m\",\n\ticonName,\n\ticonSet,\n\tlabel,\n\tisQuiet = false,\n\tisSelected = false,\n\tisEmphasized = false,\n\tisHovered = false,\n\tisFocused = false,\n\tisActive = false,\n\tisDisabled = false,\n\thasPopup = false,\n\thideLabel = false,\n\tstaticColor,\n\tcustomClasses = [],\n\tcustomStyles = {},\n\tcustomIconClasses = [],\n\tonclick,\n\tid,\n\ttestId,\n\trole,\n\t...globals\n}) => {\n\n\treturn html`\n\t\t<button\n\t\t\taria-label=${ifDefined(label)}\n\t\t\taria-haspopup=${hasPopup ? \"true\" : \"false\"}\n\t\t\taria-pressed=${isSelected ? \"true\" : \"false\"}\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--quiet`]: isQuiet,\n\t\t\t\t[`${rootClass}--emphasized`]: isEmphasized,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t[\"is-disabled\"]: isDisabled,\n\t\t\t\t[\"is-selected\"]: isSelected,\n\t\t\t\t[\"is-hover\"]: isHovered,\n\t\t\t\t[\"is-focus-visible\"]: isFocused,\n\t\t\t\t[\"is-active\"]: isActive,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\tdata-testid=${ifDefined(testId)}\n\t\t\trole=${ifDefined(role)}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick}\n\t\t>\n\t\t\t${when(hasPopup, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName: \"CornerTriangle\",\n\t\t\t\t\tsetName: \"ui\",\n\t\t\t\t\tcustomClasses: [`${rootClass}-hold`],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(iconName, () =>\n\t\t\t\tIcon({\n\t\t\t\t\t...globals,\n\t\t\t\t\tsize,\n\t\t\t\t\ticonName,\n\t\t\t\t\tsetName: iconSet,\n\t\t\t\t\tcustomClasses: [`${rootClass}-icon`, ...customIconClasses],\n\t\t\t\t})\n\t\t\t)}\n\t\t\t${when(\n\t\t\t\tlabel && !hideLabel,\n\t\t\t\t() => html`<span class=\"${rootClass}-label\">${label}</span>`\n\t\t\t)}\n\t\t</button>\n\t`;\n};\n"],"names":[],"sourceRoot":""}