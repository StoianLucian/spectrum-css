{"version":3,"file":"tray-stories-tray-stories.999a561b.iframe.bundle.js","mappings":";;;AAmEA;;AASA;;AAaA;;ACrCA;AAcA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;;AAEA;AACA;AAGA;AACA;;AAQA;;ACtEA;;AAQA;AACA;AACA;AACA;;AAEA;;;;ACPA;AAMA;;;;;AAKA;AACA;AAQA;AACA;;;AAaA;AAEA;AAIA;AAiBA;AAQA;;AC7EA;AASA;;;AASA;AACA;AASA;;;AClCA;;AAEA;;AAOA;;;;;ACUA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;AAgBA;;ACvCA;AACA;;;AAGA;AAKA;;AAEA;;;;;ACbA;;AAMA;;AAEA","sources":["webpack://@spectrum-css/preview/","webpack://@spectrum-css/preview/../components/button/stories/template.js","webpack://@spectrum-css/preview/../components/closebutton/stories/template.js","webpack://@spectrum-css/preview/../components/dialog/stories/template.js","webpack://@spectrum-css/preview/../components/divider/stories/template.js","webpack://@spectrum-css/preview/../components/modal/stories/template.js","webpack://@spectrum-css/preview/../components/progresscircle/stories/template.js","webpack://@spectrum-css/preview/../components/tray/stories/template.js","webpack://@spectrum-css/preview/../components/underlay/stories/template.js"],"sourcesContent":[null,"import { useArgs } from \"@storybook/preview-api\";\nimport { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\nimport { when } from \"lit/directives/when.js\";\n\n\nimport { capitalize, lowerCase } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\nimport { Template as ProgressCircle } from \"@spectrum-css/progresscircle/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Button\",\n\tid,\n\ttestId,\n\tcustomClasses = [],\n\tcustomStyles = {},\n\tsize = \"m\",\n\tlabel,\n\thideLabel = false,\n\ticonName,\n\ticonAfterLabel = false,\n\tvariant,\n\tstaticColor,\n\ttreatment,\n\tonclick,\n\tisDisabled = false,\n\tisHovered = false,\n\tisFocused = false,\n\tisActive = false,\n\tisPending = false,\n\tariaExpanded,\n\tariaControls,\n\t...globals\n}) => {\n\tconst { express } = globals;\n\ttry {\n\t\tif (express) import(/* webpackPrefetch: true */ \"../themes/express.css\");\n\t\telse import(/* webpackPrefetch: true */ \"../themes/spectrum.css\");\n\t}\n\tcatch (e) {\n\t\tconsole.warn(e);\n\t}\n\n\tconst [, updateArgs] = useArgs();\n\n\treturn html`\n    <button\n      class=${classMap({\n        [rootClass]: true,\n        [`${rootClass}--${treatment}`]: typeof treatment !== \"undefined\",\n        [`${rootClass}--${variant}`]: typeof variant !== \"undefined\",\n        [`${rootClass}--size${size?.toUpperCase()}`]: typeof size !== \"undefined\",\n        [`${rootClass}--static${capitalize(lowerCase(staticColor))}`]: typeof staticColor !== \"undefined\",\n        [`${rootClass}--iconOnly`]: hideLabel,\n        [\"is-pending\"]: isPending,\n        [\"is-disabled\"]: isDisabled,\n\t\t\t\t[\"is-hover\"]: isHovered,\n\t\t\t\t[\"is-focus-visible\"]: isFocused,\n\t\t\t\t[\"is-active\"]: isActive,\n        ...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n      })}\n      id=${ifDefined(id)}\n      style=${ifDefined(styleMap(customStyles))}\n      ?disabled=${isDisabled}\n      @click=${onclick ?? function() {\n        // Toggle the is-pending state on-click\n        updateArgs({ isPending: true });\n        setTimeout(() => {\n          updateArgs({ isPending: false });\n        }, 3000);\n      }}\n      aria-label=${ifDefined(hideLabel ? iconName : undefined)}\n      aria-expanded=${ifDefined(ariaExpanded?.toString())}\n      aria-controls=${ifDefined(ariaControls)}\n      data-testid=${ifDefined(testId)}\n    >\n      ${when(iconName && !iconAfterLabel, () => Icon({ ...globals, iconName, size }))}\n      ${when(label && !hideLabel,\n        () => html`<span class=${`${rootClass}-label`}>${label}</span>`\n      )}\n      ${when(iconName && iconAfterLabel, () => Icon({ ...globals, iconName, size }))}\n      ${when(isPending, () => ProgressCircle({\n        ...globals,\n        size: \"s\",\n        testId: \"progress-circle\",\n        staticColor,\n        isIndeterminate: true,\n      }))}\n    </button>\n  `;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\n\nimport { capitalize, lowerCase, upperCase } from \"lodash-es\";\n\nimport { Template as Icon } from \"@spectrum-css/icon/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-CloseButton\",\n\tsize = \"m\",\n\tlabel = \"Close\",\n\tstaticColor,\n\tisDisabled = false,\n\tcustomClasses = [],\n\tid,\n\tonclick,\n\t...globals\n}) => {\n\n\treturn html`\n\t\t<button\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${upperCase(size)}`]: typeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\taria-label=\"close\"\n\t\t\tid=${ifDefined(id)}\n\t\t\tlabel=${ifDefined(label)}\n\t\t\t?disabled=${isDisabled}\n\t\t\t@click=${onclick}\n\t\t>\n\t\t\t${Icon({\n\t\t\t\t...globals,\n\t\t\t\tsize,\n\t\t\t\ticonName: \"Cross\",\n\t\t\t\tcustomClasses: [`${rootClass}-UIIcon`],\n\t\t\t})}\n\t\t</button>\n\t`;\n};\n","import { useArgs } from \"@storybook/preview-api\";\nimport { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { when } from \"lit/directives/when.js\";\n\nimport { Template as Button } from \"@spectrum-css/button/stories/template.js\";\nimport { Template as CloseButton } from \"@spectrum-css/closebutton/stories/template.js\";\nimport { Template as Divider } from \"@spectrum-css/divider/stories/template.js\";\nimport { Template as Modal } from \"@spectrum-css/modal/stories/template.js\";\nimport { Template as Underlay } from \"@spectrum-css/underlay/stories/template.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Dialog\",\n\tisDismissable = true,\n\tisOpen = true,\n\tshowModal = false,\n\theading,\n\tcontent = [],\n\tcustomClasses = [],\n\tid,\n\t...globals\n}) => {\n\tconst { scale } = globals;\n\tconst [, updateArgs] = useArgs();\n\n\tconst Dialog = html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--${scale}`]: true,\n\t\t\t\t[`${rootClass}--dismissable`]: isDismissable,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\trole=\"dialog\"\n\t\t\ttabindex=\"-1\"\n\t\t\taria-modal=\"true\"\n\t\t>\n\t\t\t<div class=\"${rootClass}-grid\">\n\t\t\t\t${when(heading, () => [\n\t\t\t\t\thtml`<h1 class=\"${rootClass}-heading\">${heading}</h1>`,\n\t\t\t\t\tDivider({\n\t\t\t\t\t\thorizontal: true,\n\t\t\t\t\t\tcustomClasses: [`${rootClass}-divider`],\n\t\t\t\t\t\t...globals,\n\t\t\t\t\t}),\n\t\t\t\t])}\n\t\t\t\t<section class=\"${rootClass}-content\">${content.map((c) => (typeof c === \"function\" ? c({}) : c))}</section>\n\t\t\t\t${when(isDismissable, () =>\n\t\t\t\t\tCloseButton({\n\t\t\t\t\t\tcustomClasses: [`${rootClass}-closeButton`],\n\t\t\t\t\t\t...globals,\n\t\t\t\t\t\tonclick: () => {\n\t\t\t\t\t\t\tupdateArgs({ isOpen: !isOpen });\n\t\t\t\t\t\t},\n\t\t\t\t\t})\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t`;\n\n\tif (showModal) {\n\t\treturn html`\n\t\t\t${Underlay({\n\t\t\t\t...globals,\n\t\t\t\tisOpen,\n\t\t\t})}\n\t\t\t${Button({\n\t\t\t\t...globals,\n\t\t\t\tsize: \"m\",\n\t\t\t\tvariant: \"secondary\",\n\t\t\t\tlabel: \"Click to open dialog\",\n\t\t\t\ttreatment: \"outline\",\n\t\t\t\tcustomClasses: [],\n\t\t\t\tcustomStyles: {\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tinsetInlineStart: \"50%\",\n\t\t\t\t\tinsetBlockStart: \"50%\",\n\t\t\t\t\ttransform: \"translate(-50%, -50%)\",\n\t\t\t\t},\n\t\t\t\tonclick: () => {\n\t\t\t\t\tupdateArgs({ isOpen: !isOpen });\n\t\t\t\t},\n\t\t\t})}\n\t\t\t${Modal({\n\t\t\t\t...globals,\n\t\t\t\tisOpen,\n\t\t\t\tcontent: Dialog,\n\t\t\t})}\n\t\t`;\n\t}\n\telse {\n\t\treturn Dialog;\n\t}\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\nimport { capitalize, lowerCase, upperCase } from \"lodash-es\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Divider\",\n\tsize = \"m\",\n\ttag = \"hr\",\n\tstaticColor,\n\tvertical = false,\n\tcustomClasses = [],\n}) => {\n\tif (tag === \"hr\") {\n\t\treturn html`\n    <hr\n      class=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--size${upperCase(size)}`]: typeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--vertical`]: vertical === true,\n\t\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n      style=${\n\t\t\t\tvertical === true\n\t\t\t\t\t? \"min-height: 20px; height: auto; align-self: stretch\"\n\t\t\t\t\t: \"\"\n\t\t\t}\n      role=\"separator\"\n      >\n    </hr>`;\n\t}\n\n\treturn html` <div\n\t\tclass=${classMap({\n\t\t\t[rootClass]: true,\n\t\t\t[`${rootClass}--size${size?.toUpperCase()}`]:\n\t\t\t\ttypeof size !== \"undefined\",\n\t\t\t[`${rootClass}--vertical`]: vertical === true,\n\t\t\t[`${rootClass}--static${capitalize(lowerCase(staticColor))}`]:\n\t\t\t\ttypeof staticColor !== \"undefined\",\n\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t})}\n\t\tstyle=${vertical === true\n\t\t\t? \"min-height: 20px; height: auto; align-self: stretch\"\n\t\t\t: \"\"}\n\t\trole=\"separator\"\n\t></div>`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Modal\",\n\tcustomClasses = [],\n\tisOpen = true,\n\tvariant,\n\tcontent = [],\n}) => html`\n\t<div class=\"${rootClass}-wrapper\">\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--${variant}`]: typeof variant !== \"undefined\",\n\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t>\n\t\t\t${content}\n\t\t</div>\n\t</div>\n`;\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\tid,\n\tcustomStyles = {},\n\ttestId,\n\trootClass = \"spectrum-ProgressCircle\",\n\tcustomClasses = [],\n\tsize = \"m\",\n\tstaticColor,\n\tisIndeterminate = false,\n}) => {\n\tlet sizeClassName = \"medium\";\n\tswitch (size) {\n\t\tcase \"s\":\n\t\t\tsizeClassName = \"small\";\n\t\t\tbreak;\n\t\tcase \"l\":\n\t\t\tsizeClassName = \"large\";\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tsizeClassName = \"medium\";\n\t}\n\n\treturn html`\n\t\t<div\n\t\t\tclass=${classMap({\n\t\t\t\t[rootClass]: true,\n\t\t\t\t[`${rootClass}--${sizeClassName}`]: typeof size !== \"undefined\",\n\t\t\t\t[`${rootClass}--indeterminate`]: isIndeterminate,\n\t\t\t\t[`${rootClass}--staticWhite`]: staticColor === \"white\",\n\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t})}\n\t\t\tid=${ifDefined(id)}\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t\tdata-testid=${ifDefined(testId)}\n\t\t>\n\t\t\t<div class=\"spectrum-ProgressCircle-track\"></div>\n\t\t\t<div class=\"spectrum-ProgressCircle-fills\">\n\t\t\t\t<div class=\"spectrum-ProgressCircle-fillMask1\">\n\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fillSubMask1\">\n\t\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fill\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"spectrum-ProgressCircle-fillMask2\">\n\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fillSubMask2\">\n\t\t\t\t\t\t<div class=\"spectrum-ProgressCircle-fill\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t`;\n};\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport \"@spectrum-css/modal/index.css\";\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Tray\",\n\tisOpen = true,\n\tcontent = [],\n\tcustomClasses = [\"spectrum-Modal\"],\n\tcustomStyles = {},\n\tid,\n}) => html`\n\t\t<div\n\t\t\tclass=\"${rootClass}-wrapper\"\n\t\t\tstyle=${ifDefined(styleMap(customStyles))}\n\t\t>\n\t\t\t<div\n\t\t\t\tclass=${classMap({\n\t\t\t\t\t[rootClass]: true,\n\t\t\t\t\t\"is-open\": isOpen,\n\t\t\t\t\t...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n\t\t\t\t})}\n\t\t\t\tid=${ifDefined(id)}\n\t\t\t>\n\t\t\t${content.map((c) => (typeof c === \"function\" ? c({}) : c))}\n\t\t\t</div>\n\t\t</div>\n\t`;\n","import { html } from \"lit\";\nimport { classMap } from \"lit/directives/class-map.js\";\nimport { ifDefined } from \"lit/directives/if-defined.js\";\nimport { styleMap } from \"lit/directives/style-map.js\";\n\nimport \"../index.css\";\n\nexport const Template = ({\n\trootClass = \"spectrum-Underlay\",\n\tcustomClasses = [],\n\tcustomStyles = {},\n\tcontent,\n\tisOpen = true,\n}) => html`\n  <div\n    class=${classMap({\n      [rootClass]: true,\n      \"is-open\": isOpen,\n      ...customClasses.reduce((a, c) => ({ ...a, [c]: true }), {}),\n    })}\n    id=\"spectrum-underlay\"\n    style=${ifDefined(styleMap(customStyles))}\n  >\n    ${content}\n  </div>\n`;\n"],"names":[],"sourceRoot":""}